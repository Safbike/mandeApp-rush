{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leonardo Osorio\\\\Documents\\\\VSCProjects\\\\mandeapp-main\\\\src\\\\forminicioe.jsx\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Formine = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      return errors;\n    },\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      };\n      fetch('http://localhost:5000/logintrab', requestOptions).then(response => {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          alert('Login Incorrecto');\n        }\n      }).then(data => {\n        data[\"type\"] = 'expert';\n        localStorage.setItem('login', JSON.stringify(data));\n        window.location.replace('/inicioe');\n      });\n      setSubmitting(false);\n    },\n    children: _ref2 => {\n      let {\n        isSubmitting\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [\"email\", /*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), \"celular\", /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-outline-secondary\",\n          disabled: isSubmitting,\n          children: \"Iniciar sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n_c = Formine;\nexport default Formine;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formine\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Formine","email","password","values","errors","test","setSubmitting","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","status","json","alert","data","localStorage","setItem","window","location","replace","isSubmitting"],"sources":["C:/Users/Leonardo Osorio/Documents/VSCProjects/mandeapp-main/src/forminicioe.jsx"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nconst Formine = () => (\n  <div>\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validate={values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(values)\n      };\n      fetch('http://localhost:5000/logintrab', requestOptions)\n      .then(response => {\n        if(response.status === 200){\n          return response.json()\n        }else{\n          alert('Login Incorrecto')\n        }\n      })\n      .then(data=>{\n        data[\"type\"] = 'expert';\n        localStorage.setItem('login', JSON.stringify(data))\n        window.location.replace('/inicioe')\n      })\n      setSubmitting(false)\n    }}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n            email\n          <Field type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n          celular\n          <Field type=\"password\" name=\"password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n          <button type=\"submit\"  className=\"btn btn-outline-secondary\" disabled={isSubmitting}>\n            Iniciar sesi√≥n\n          </button>\n        </Form>\n      )}\n    </Formik>\n  </div>\n);\n\nexport default Formine;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;;;AAEA,MAAMC,OAAO,GAAG,mBACd;EAAA,uBACE,QAAC,MAAD;IACE,aAAa,EAAE;MAAEC,KAAK,EAAE,EAAT;MAAaC,QAAQ,EAAE;IAAvB,CADjB;IAEE,QAAQ,EAAEC,MAAM,IAAI;MAClB,MAAMC,MAAM,GAAG,EAAf;;MACA,IAAI,CAACD,MAAM,CAACF,KAAZ,EAAmB;QACjBG,MAAM,CAACH,KAAP,GAAe,UAAf;MACD,CAFD,MAEO,IACL,CAAC,2CAA2CI,IAA3C,CAAgDF,MAAM,CAACF,KAAvD,CADI,EAEL;QACAG,MAAM,CAACH,KAAP,GAAe,uBAAf;MACD;;MACD,OAAOG,MAAP;IACD,CAZH;IAaE,QAAQ,EAAE,CAACD,MAAD,WAA+B;MAAA,IAAtB;QAAEG;MAAF,CAAsB;MACvC,MAAMC,cAAc,GAAG;QACrBC,MAAM,EAAE,MADa;QAErBC,OAAO,EAAE;UAAE,gBAAgB;QAAlB,CAFY;QAGrBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,MAAf;MAHe,CAAvB;MAKFU,KAAK,CAAC,iCAAD,EAAoCN,cAApC,CAAL,CACCO,IADD,CACMC,QAAQ,IAAI;QAChB,IAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;UACzB,OAAOD,QAAQ,CAACE,IAAT,EAAP;QACD,CAFD,MAEK;UACHC,KAAK,CAAC,kBAAD,CAAL;QACD;MACF,CAPD,EAQCJ,IARD,CAQMK,IAAI,IAAE;QACVA,IAAI,CAAC,MAAD,CAAJ,GAAe,QAAf;QACAC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BV,IAAI,CAACC,SAAL,CAAeO,IAAf,CAA9B;QACAG,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,UAAxB;MACD,CAZD;MAaAlB,aAAa,CAAC,KAAD,CAAb;IACD,CAjCD;IAAA,UAmCG;MAAA,IAAC;QAAEmB;MAAF,CAAD;MAAA,oBACC,QAAC,IAAD;QAAA,iCAEE,QAAC,KAAD;UAAO,IAAI,EAAC,OAAZ;UAAoB,IAAI,EAAC;QAAzB;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE,QAAC,YAAD;UAAc,IAAI,EAAC,OAAnB;UAA2B,SAAS,EAAC;QAArC;UAAA;UAAA;UAAA;QAAA,QAHF,0BAKE,QAAC,KAAD;UAAO,IAAI,EAAC,UAAZ;UAAuB,IAAI,EAAC;QAA5B;UAAA;UAAA;UAAA;QAAA,QALF,eAME,QAAC,YAAD;UAAc,IAAI,EAAC,UAAnB;UAA8B,SAAS,EAAC;QAAxC;UAAA;UAAA;UAAA;QAAA,QANF,eAOE;UAAQ,IAAI,EAAC,QAAb;UAAuB,SAAS,EAAC,2BAAjC;UAA6D,QAAQ,EAAEA,YAAvE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA,QADD;IAAA;EAnCH;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF;;KAAMzB,O;AAsDN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}